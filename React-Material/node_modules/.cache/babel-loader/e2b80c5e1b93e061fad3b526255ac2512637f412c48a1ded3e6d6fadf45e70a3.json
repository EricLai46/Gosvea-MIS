{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lky13\\\\OneDrive\\\\Desktop\\\\React-Material\\\\src\\\\components\\\\calendar\\\\VenueScheduleCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { Dialog, DialogActions, DialogContent, DialogTitle, TextField, Button } from '@mui/material';\nimport axiosInstance from '../AxiosInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VenueScheduleCalendar = ({\n  venueId\n}) => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [newEvent, setNewEvent] = useState({\n    title: '',\n    start: '',\n    end: ''\n  });\n  const [selectedDate, setSelectedDate] = useState('');\n  useEffect(() => {\n    fetchEvents();\n  }, [venueId]);\n  const fetchEvents = async () => {\n    try {\n      const response = await axiosInstance.get(`/api/venues/${venueId}/events`);\n      setEvents(response.data);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  };\n  const handleDateClick = arg => {\n    setSelectedDate(arg.dateStr);\n    setOpenDialog(true);\n  };\n  const handleEventClick = clickInfo => {\n    if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n      clickInfo.event.remove();\n      deleteEvent(clickInfo.event.id);\n    }\n  };\n  const saveEvent = async () => {\n    const newEventWithDate = {\n      ...newEvent,\n      start: `${selectedDate}T${newEvent.start}`,\n      end: `${selectedDate}T${newEvent.end}`\n    };\n    const response = await fetch(`/api/venues/${venueId}/events`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newEventWithDate)\n    });\n    const savedEvent = await response.json();\n    setEvents([...events, savedEvent]);\n    setOpenDialog(false);\n  };\n  const deleteEvent = async eventId => {\n    await fetch(`/api/venues/${venueId}/events/${eventId}`, {\n      method: 'DELETE'\n    });\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewEvent(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      dateClick: handleDateClick,\n      eventClick: handleEventClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: () => setOpenDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          name: \"title\",\n          label: \"Event Title\",\n          type: \"text\",\n          fullWidth: true,\n          value: newEvent.title,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          name: \"start\",\n          label: \"Start Time\",\n          type: \"time\",\n          fullWidth: true,\n          value: newEvent.start,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          name: \"end\",\n          label: \"End Time\",\n          type: \"time\",\n          fullWidth: true,\n          value: newEvent.end,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenDialog(false),\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: saveEvent,\n          color: \"primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(VenueScheduleCalendar, \"PeUzw9IYVOsDGe8+KCJF85Vr5kg=\");\n_c = VenueScheduleCalendar;\nexport default VenueScheduleCalendar;\nvar _c;\n$RefreshReg$(_c, \"VenueScheduleCalendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","interactionPlugin","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Button","axiosInstance","jsxDEV","_jsxDEV","VenueScheduleCalendar","venueId","_s","events","setEvents","openDialog","setOpenDialog","newEvent","setNewEvent","title","start","end","selectedDate","setSelectedDate","fetchEvents","response","get","data","error","console","handleDateClick","arg","dateStr","handleEventClick","clickInfo","window","confirm","event","remove","deleteEvent","id","saveEvent","newEventWithDate","fetch","method","headers","body","JSON","stringify","savedEvent","json","eventId","handleInputChange","e","name","value","target","prevState","children","plugins","initialView","dateClick","eventClick","fileName","_jsxFileName","lineNumber","columnNumber","open","onClose","autoFocus","margin","label","type","fullWidth","onChange","onClick","color","_c","$RefreshReg$"],"sources":["C:/Users/lky13/OneDrive/Desktop/React-Material/src/components/calendar/VenueScheduleCalendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, TextField, Button } from '@mui/material';\r\nimport axiosInstance from '../AxiosInstance';\r\n\r\nconst VenueScheduleCalendar = ({ venueId }) => {\r\n    const [events, setEvents] = useState([]);\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [newEvent, setNewEvent] = useState({\r\n        title: '',\r\n        start: '',\r\n        end: ''\r\n    });\r\n    const [selectedDate, setSelectedDate] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchEvents();\r\n    }, [venueId]);\r\n\r\n    const fetchEvents = async () => {\r\n        try {\r\n            const response = await axiosInstance.get(`/api/venues/${venueId}/events`);\r\n            setEvents(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching events:', error);\r\n        }\r\n    };\r\n\r\n    const handleDateClick = (arg) => {\r\n        setSelectedDate(arg.dateStr);\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    const handleEventClick = (clickInfo) => {\r\n        if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\r\n            clickInfo.event.remove();\r\n            deleteEvent(clickInfo.event.id);\r\n        }\r\n    };\r\n\r\n    const saveEvent = async () => {\r\n        const newEventWithDate = {\r\n            ...newEvent,\r\n            start: `${selectedDate}T${newEvent.start}`,\r\n            end: `${selectedDate}T${newEvent.end}`\r\n        };\r\n        const response = await fetch(`/api/venues/${venueId}/events`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newEventWithDate)\r\n        });\r\n        const savedEvent = await response.json();\r\n        setEvents([...events, savedEvent]);\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    const deleteEvent = async (eventId) => {\r\n        await fetch(`/api/venues/${venueId}/events/${eventId}`, {\r\n            method: 'DELETE'\r\n        });\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewEvent(prevState => ({ ...prevState, [name]: value }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FullCalendar\r\n                plugins={[dayGridPlugin, interactionPlugin]}\r\n                initialView=\"dayGridMonth\"\r\n                events={events}\r\n                dateClick={handleDateClick}\r\n                eventClick={handleEventClick}\r\n            />\r\n            <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\r\n                <DialogTitle>Add New Event</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        name=\"title\"\r\n                        label=\"Event Title\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        value={newEvent.title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        name=\"start\"\r\n                        label=\"Start Time\"\r\n                        type=\"time\"\r\n                        fullWidth\r\n                        value={newEvent.start}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        name=\"end\"\r\n                        label=\"End Time\"\r\n                        type=\"time\"\r\n                        fullWidth\r\n                        value={newEvent.end}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpenDialog(false)} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={saveEvent} color=\"primary\">\r\n                        Save\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VenueScheduleCalendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
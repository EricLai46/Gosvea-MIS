{"ast":null,"code":"import React,{useState,useEffect}from'react';import FullCalendar from'@fullcalendar/react';import dayGridPlugin from'@fullcalendar/daygrid';import interactionPlugin from'@fullcalendar/interaction';import{Dialog,DialogActions,DialogContent,DialogTitle,TextField,Button,Checkbox,FormControlLabel}from'@mui/material';import axiosInstance from'../AxiosInstance';import{addWeeks}from'date-fns';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const InstructorScheduleCalendar=_ref=>{let{instructorId}=_ref;const[events,setEvents]=useState([]);const[openDialog,setOpenDialog]=useState(false);const[newEvent,setNewEvent]=useState({title:'',start:'',end:'',isWeekly:false});const[selectedDate,setSelectedDate]=useState('');useEffect(()=>{fetchEvents();},[instructorId]);const fetchEvents=async()=>{try{const response=await axiosInstance.get(\"/instructor/schedule?instructorId=\".concat(instructorId));const availableTimes=response.data.data;// Convert the data to FullCalendar event format\nconst eventsData=availableTimes.map(time=>({title:'Available',start:\"\".concat(time.date,\"T\").concat(time.startTime),// Use `startTime` based on the response structure\nend:time.endTime?\"\".concat(time.date,\"T\").concat(time.endTime):undefined,// Use `endTime` based on the response structure\nbackgroundColor:'lightgreen',id:time.id,extendedProps:{endTime:time.endTime// 确保结束时间传递到extendedProps\n}}));setEvents(eventsData);}catch(error){console.error('Error fetching events:',error);}};const handleDateClick=arg=>{setSelectedDate(arg.dateStr);setOpenDialog(true);};const handleEventClick=async clickInfo=>{if(window.confirm(\"Are you sure you want to delete the event '\".concat(clickInfo.event.title,\"'\"))){clickInfo.event.remove();try{await axiosInstance.delete(\"/instructor/schedule\",{params:{id:clickInfo.event.id}});}catch(error){console.error('Error deleting event:',error);}}};const saveEvent=async()=>{const eventsToSave=[];let currentDate=new Date(selectedDate);for(let i=0;i<(newEvent.isWeekly?5:1);i++){eventsToSave.push({title:newEvent.title,date:currentDate.toISOString().split('T')[0],instructorId:instructorId,startTime:newEvent.start,endTime:newEvent.end});currentDate=addWeeks(currentDate,1);}try{const responses=await Promise.all(eventsToSave.map(event=>axiosInstance.post(\"/instructor/schedule\",event)));setEvents([...events,...responses.map(response=>response.data)]);setOpenDialog(false);fetchEvents();}catch(error){console.error('Error saving event:',error);}};const handleInputChange=e=>{const{name,value,checked,type}=e.target;setNewEvent(prevState=>({...prevState,[name]:type==='checkbox'?checked:value}));};const renderEventContent=eventInfo=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:eventInfo.timeText}),/*#__PURE__*/_jsx(\"i\",{children:eventInfo.event.title}),/*#__PURE__*/_jsx(\"div\",{children:eventInfo.event.extendedProps.endTime?\"End: \".concat(eventInfo.event.extendedProps.endTime):''})]});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(FullCalendar,{plugins:[dayGridPlugin,interactionPlugin],initialView:\"dayGridMonth\",events:events,dateClick:handleDateClick,eventClick:handleEventClick,eventContent:renderEventContent}),/*#__PURE__*/_jsxs(Dialog,{open:openDialog,onClose:()=>setOpenDialog(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Add New Event\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(TextField,{autoFocus:true,margin:\"dense\",name:\"title\",label:\"Event Title\",type:\"text\",fullWidth:true,value:newEvent.title,onChange:handleInputChange}),/*#__PURE__*/_jsx(TextField,{margin:\"dense\",name:\"start\",label:\"Start Time\",type:\"time\",fullWidth:true,value:newEvent.start,onChange:handleInputChange}),/*#__PURE__*/_jsx(TextField,{margin:\"dense\",name:\"end\",label:\"End Time\",type:\"time\",fullWidth:true,value:newEvent.end,onChange:handleInputChange}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:newEvent.isWeekly,onChange:handleInputChange,name:\"isWeekly\",color:\"primary\"}),label:\"Repeat weekly for 4 weeks\"})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setOpenDialog(false),color:\"primary\",children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:saveEvent,color:\"primary\",children:\"Save\"})]})]})]});};export default InstructorScheduleCalendar;","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","interactionPlugin","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Button","Checkbox","FormControlLabel","axiosInstance","addWeeks","jsx","_jsx","jsxs","_jsxs","InstructorScheduleCalendar","_ref","instructorId","events","setEvents","openDialog","setOpenDialog","newEvent","setNewEvent","title","start","end","isWeekly","selectedDate","setSelectedDate","fetchEvents","response","get","concat","availableTimes","data","eventsData","map","time","date","startTime","endTime","undefined","backgroundColor","id","extendedProps","error","console","handleDateClick","arg","dateStr","handleEventClick","clickInfo","window","confirm","event","remove","delete","params","saveEvent","eventsToSave","currentDate","Date","i","push","toISOString","split","responses","Promise","all","post","handleInputChange","e","name","value","checked","type","target","prevState","renderEventContent","eventInfo","children","timeText","plugins","initialView","dateClick","eventClick","eventContent","open","onClose","autoFocus","margin","label","fullWidth","onChange","control","color","onClick"],"sources":["C:/Users/lky13/OneDrive/Documentos/GitHub/Gosvea-MIS/React-Material/src/components/calendar/InstructorScheduleCalendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, TextField, Button, Checkbox, FormControlLabel } from '@mui/material';\r\nimport axiosInstance from '../AxiosInstance';\r\nimport { addWeeks } from 'date-fns';\r\n\r\nconst InstructorScheduleCalendar = ({ instructorId }) => {\r\n    const [events, setEvents] = useState([]);\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [newEvent, setNewEvent] = useState({\r\n        title: '',\r\n        start: '',\r\n        end: '',\r\n        isWeekly: false,\r\n    });\r\n    const [selectedDate, setSelectedDate] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchEvents();\r\n    }, [instructorId]);\r\n\r\n    const fetchEvents = async () => {\r\n        try {\r\n            const response = await axiosInstance.get(`/instructor/schedule?instructorId=${instructorId}`);\r\n            const availableTimes = response.data.data;\r\n\r\n            // Convert the data to FullCalendar event format\r\n            const eventsData = availableTimes.map(time => ({\r\n                title: 'Available',\r\n                start: `${time.date}T${time.startTime}`, // Use `startTime` based on the response structure\r\n                end: time.endTime ? `${time.date}T${time.endTime}` : undefined, // Use `endTime` based on the response structure\r\n                backgroundColor: 'lightgreen',\r\n                id: time.id,\r\n                extendedProps: {\r\n                    endTime: time.endTime, // 确保结束时间传递到extendedProps\r\n                }\r\n            }));\r\n\r\n            setEvents(eventsData);\r\n        } catch (error) {\r\n            console.error('Error fetching events:', error);\r\n        }\r\n    };\r\n\r\n    const handleDateClick = (arg) => {\r\n        setSelectedDate(arg.dateStr);\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    const handleEventClick = async (clickInfo) => {\r\n        if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\r\n            clickInfo.event.remove();\r\n            try {\r\n                await axiosInstance.delete(`/instructor/schedule`, { params: { id: clickInfo.event.id } });\r\n            } catch (error) {\r\n                console.error('Error deleting event:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const saveEvent = async () => {\r\n        const eventsToSave = [];\r\n        let currentDate = new Date(selectedDate);\r\n\r\n        for (let i = 0; i < (newEvent.isWeekly ? 5 : 1); i++) {\r\n            eventsToSave.push({\r\n                title: newEvent.title,\r\n                date: currentDate.toISOString().split('T')[0],\r\n                instructorId: instructorId,\r\n                startTime: newEvent.start,\r\n                endTime: newEvent.end,\r\n            });\r\n            currentDate = addWeeks(currentDate, 1);\r\n        }\r\n\r\n        try {\r\n            const responses = await Promise.all(eventsToSave.map(event => \r\n                axiosInstance.post(`/instructor/schedule`, event)\r\n            ));\r\n            setEvents([...events, ...responses.map(response => response.data)]);\r\n            setOpenDialog(false);\r\n            fetchEvents();\r\n        } catch (error) {\r\n            console.error('Error saving event:', error);\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value, checked, type } = e.target;\r\n        setNewEvent(prevState => ({ ...prevState, [name]: type === 'checkbox' ? checked : value }));\r\n    };\r\n\r\n    const renderEventContent = (eventInfo) => (\r\n        <div>\r\n            <b>{eventInfo.timeText}</b>\r\n            <i>{eventInfo.event.title}</i>\r\n            <div>{eventInfo.event.extendedProps.endTime ? `End: ${eventInfo.event.extendedProps.endTime}` : ''}</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <FullCalendar\r\n                plugins={[dayGridPlugin, interactionPlugin]}\r\n                initialView=\"dayGridMonth\"\r\n                events={events}\r\n                dateClick={handleDateClick}\r\n                eventClick={handleEventClick}\r\n                eventContent={renderEventContent}\r\n            />\r\n            <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\r\n                <DialogTitle>Add New Event</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        name=\"title\"\r\n                        label=\"Event Title\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        value={newEvent.title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        name=\"start\"\r\n                        label=\"Start Time\"\r\n                        type=\"time\"\r\n                        fullWidth\r\n                        value={newEvent.start}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        name=\"end\"\r\n                        label=\"End Time\"\r\n                        type=\"time\"\r\n                        fullWidth\r\n                        value={newEvent.end}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={newEvent.isWeekly}\r\n                                onChange={handleInputChange}\r\n                                name=\"isWeekly\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Repeat weekly for 4 weeks\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpenDialog(false)} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={saveEvent} color=\"primary\">\r\n                        Save\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InstructorScheduleCalendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
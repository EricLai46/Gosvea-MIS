{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lky13\\\\OneDrive\\\\Desktop\\\\React-Material\\\\src\\\\components\\\\calendar\\\\VenueScheduleCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VenueScheduleCalendar = ({\n  venueId\n}) => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    // Fetch initial events for the venue\n    fetchEvents();\n  }, [venueId]);\n  const fetchEvents = async () => {\n    // Replace with your API call\n    const response = await fetch(`/api/venues/${venueId}/events`);\n    const data = await response.json();\n    setEvents(data);\n  };\n  const handleDateClick = arg => {\n    const title = prompt('Enter Event Title:');\n    if (title) {\n      const newEvent = {\n        title,\n        start: arg.date,\n        allDay: arg.allDay\n      };\n      setEvents([...events, newEvent]);\n      // Save new event to the server\n      saveEvent(newEvent);\n    }\n  };\n  const handleEventClick = clickInfo => {\n    if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n      clickInfo.event.remove();\n      // Delete event from the server\n      deleteEvent(clickInfo.event.id);\n    }\n  };\n  const saveEvent = async event => {\n    // Replace with your API call to save event\n    await fetch(`/api/venues/${venueId}/events`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(event)\n    });\n  };\n  const deleteEvent = async eventId => {\n    // Replace with your API call to delete event\n    await fetch(`/api/venues/${venueId}/events/${eventId}`, {\n      method: 'DELETE'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(FullCalendar, {\n    plugins: [dayGridPlugin, interactionPlugin],\n    initialView: \"dayGridMonth\",\n    events: events,\n    dateClick: handleDateClick,\n    eventClick: handleEventClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(VenueScheduleCalendar, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = VenueScheduleCalendar;\nexport default VenueScheduleCalendar;\nvar _c;\n$RefreshReg$(_c, \"VenueScheduleCalendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","VenueScheduleCalendar","venueId","_s","events","setEvents","fetchEvents","response","fetch","data","json","handleDateClick","arg","title","prompt","newEvent","start","date","allDay","saveEvent","handleEventClick","clickInfo","window","confirm","event","remove","deleteEvent","id","method","headers","body","JSON","stringify","eventId","plugins","initialView","dateClick","eventClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lky13/OneDrive/Desktop/React-Material/src/components/calendar/VenueScheduleCalendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\n\r\nconst VenueScheduleCalendar = ({ venueId }) => {\r\n    const [events, setEvents] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Fetch initial events for the venue\r\n        fetchEvents();\r\n    }, [venueId]);\r\n\r\n    const fetchEvents = async () => {\r\n        // Replace with your API call\r\n        const response = await fetch(`/api/venues/${venueId}/events`);\r\n        const data = await response.json();\r\n        setEvents(data);\r\n    };\r\n\r\n    const handleDateClick = (arg) => {\r\n        const title = prompt('Enter Event Title:');\r\n        if (title) {\r\n            const newEvent = { title, start: arg.date, allDay: arg.allDay };\r\n            setEvents([...events, newEvent]);\r\n            // Save new event to the server\r\n            saveEvent(newEvent);\r\n        }\r\n    };\r\n\r\n    const handleEventClick = (clickInfo) => {\r\n        if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\r\n            clickInfo.event.remove();\r\n            // Delete event from the server\r\n            deleteEvent(clickInfo.event.id);\r\n        }\r\n    };\r\n\r\n    const saveEvent = async (event) => {\r\n        // Replace with your API call to save event\r\n        await fetch(`/api/venues/${venueId}/events`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(event)\r\n        });\r\n    };\r\n\r\n    const deleteEvent = async (eventId) => {\r\n        // Replace with your API call to delete event\r\n        await fetch(`/api/venues/${venueId}/events/${eventId}`, {\r\n            method: 'DELETE'\r\n        });\r\n    };\r\n\r\n    return (\r\n        <FullCalendar\r\n            plugins={[dayGridPlugin, interactionPlugin]}\r\n            initialView=\"dayGridMonth\"\r\n            events={events}\r\n            dateClick={handleDateClick}\r\n            eventClick={handleEventClick}\r\n        />\r\n    );\r\n};\r\n\r\nexport default VenueScheduleCalendar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,iBAAiB,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,qBAAqB,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ;IACAW,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,MAAMI,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAeN,OAAO,SAAS,CAAC;IAC7D,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCL,SAAS,CAACI,IAAI,CAAC;EACnB,CAAC;EAED,MAAME,eAAe,GAAIC,GAAG,IAAK;IAC7B,MAAMC,KAAK,GAAGC,MAAM,CAAC,oBAAoB,CAAC;IAC1C,IAAID,KAAK,EAAE;MACP,MAAME,QAAQ,GAAG;QAAEF,KAAK;QAAEG,KAAK,EAAEJ,GAAG,CAACK,IAAI;QAAEC,MAAM,EAAEN,GAAG,CAACM;MAAO,CAAC;MAC/Db,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEW,QAAQ,CAAC,CAAC;MAChC;MACAI,SAAS,CAACJ,QAAQ,CAAC;IACvB;EACJ,CAAC;EAED,MAAMK,gBAAgB,GAAIC,SAAS,IAAK;IACpC,IAAIC,MAAM,CAACC,OAAO,CAAC,8CAA8CF,SAAS,CAACG,KAAK,CAACX,KAAK,GAAG,CAAC,EAAE;MACxFQ,SAAS,CAACG,KAAK,CAACC,MAAM,CAAC,CAAC;MACxB;MACAC,WAAW,CAACL,SAAS,CAACG,KAAK,CAACG,EAAE,CAAC;IACnC;EACJ,CAAC;EAED,MAAMR,SAAS,GAAG,MAAOK,KAAK,IAAK;IAC/B;IACA,MAAMhB,KAAK,CAAC,eAAeN,OAAO,SAAS,EAAE;MACzC0B,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,KAAK;IAC9B,CAAC,CAAC;EACN,CAAC;EAED,MAAME,WAAW,GAAG,MAAOO,OAAO,IAAK;IACnC;IACA,MAAMzB,KAAK,CAAC,eAAeN,OAAO,WAAW+B,OAAO,EAAE,EAAE;MACpDL,MAAM,EAAE;IACZ,CAAC,CAAC;EACN,CAAC;EAED,oBACI5B,OAAA,CAACJ,YAAY;IACTsC,OAAO,EAAE,CAACrC,aAAa,EAAEC,iBAAiB,CAAE;IAC5CqC,WAAW,EAAC,cAAc;IAC1B/B,MAAM,EAAEA,MAAO;IACfgC,SAAS,EAAEzB,eAAgB;IAC3B0B,UAAU,EAAEjB;EAAiB;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV,CAAC;AAACtC,EAAA,CA5DIF,qBAAqB;AAAAyC,EAAA,GAArBzC,qBAAqB;AA8D3B,eAAeA,qBAAqB;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}